<?php

function islandora_sync_menu() {
  //$items['admin/structure/types/manage/%node_type/islandora'] = array(
  $items['admin/islandora/node_sync'] = array(
    'title' => 'Node sync',
    'page callback' => 'islandora_sync_page',
    'access arguments' => array('administer content types'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/islandora/node_sync/%node_type'] = array(
    'title' => 'Node sync settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_sync_nodetype_settings_form', 3),
    'access arguments' => array('administer content types'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/islandora/node_sync/%node_type/fields'] = array(
    'title' => 'Node sync fields',
    'page callback' => 'islandora_sync_nodetype_fields',
    'page arguments' => array(3),
    'access arguments' => array('administer content types'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/islandora/node_sync/%node_type/fields/%'] = array(
    'title' => 'Node sync fields mapping',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_sync_field_mapping_form', 3, 5),
    'access arguments' => array('administer content types'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function islandora_sync_node_insert($node) {
  islandora_sync_track_state($node, 'insert');
}

function islandora_sync_node_update($node) {
  islandora_sync_track_state($node, 'update');
}

function islandora_sync_track_state($node, $operation) {
  $record['entity_id'] = $node->nid;
  $record['time'] = time();

  //@TODO: this sucks
  if ($operation == 'insert') {
    $record['event'] = 'insert';
   // drupal_write_record('islandora_sync_state', $record);
  }
  else {
    
  }
}

function islandora_sync_cron() {

  // Create new fedora objects
  // If sync to fedora
  $new_nodes = db_query("SELECT * FROM {islandora_sync_state} WHERE pid IS NULL")->fetchAll();
  foreach ($new_nodes AS $node_state) {
    $object_id = islandora_sync_create_fedora_object($node_state->entity_id);
    $node_state->pid = $object_id;
    $node_state->event_time = time();
    $node_state->event = 'created';
    drupal_write_record('islandora_sync_state', $node_state, 'id');

    watchdog('islandora_sync', 'Created object: ' . $object_id);
  }

  // Create new drupal nodes

  // find cmodels that are mapped to content types

  $cmodels = db_query("SELECT * FROM {islandora_sync_type_cmodel}")->fetchAll();

  foreach ($cmodels AS $cmodel) {
    $objects = islandora_sync_get_unsync_objects($cmodel->cmodel);  //@TODO: single query for all cmodels?

    foreach ($objects AS $object_id) {
      // ensure object hasn't already been imported
      $object = islandora_object_load($object_id);

      // get proper content type based on cmodel
      // find proper node owner

      $node = new stdClass();
      $node->type = 'page';
      node_object_prepare($node);

      $node->title = check_plain($object->label);
      $node->language = LANGUAGE_NONE;

      node_save($node);

      $record['entity_id'] = $node->nid;
      $record['pid'] = $object_id;
      $record['event_time'] = time();
      $record['event'] = 'created';

      drupal_write_record('islandora_sync_state', $record);

      // update rels-ext
      $object->relationships->add(ISLANDORA_RELS_EXT_URI, 'drupalEntity', $node->nid, TRUE);

    }
  }
}

function islandora_sync_get_unsync_objects($cmodel) {
  module_load_include('inc', 'islandora', 'includes/tuque');

  $connection = new IslandoraTuque();

  $query = 'select $object  from <#ri>
  where $object<fedora-model:hasModel> <info:fedora/' . $cmodel . '>
  and $object <fedora-model:state> <info:fedora/fedora-system:def/model#Active>
  minus $object <http://islandora.ca/ontology/relsext#drupalEntity> $entity
  order by $object';

  $results = $connection->repository->ri->itqlQuery($query);

  $objects = array();
  foreach ($results as $model) {
    $content_models[] = $model['object']['value'];
  }
  $objects = array_unique($content_models);
  $objects = array_values($content_models);

  return $objects;
}

function islandora_sync_create_fedora_object($entity_id) {
  module_load_include('inc', 'islandora', 'includes/utilities');
  $node = node_load($entity_id);
  list($id, $vid, $bundle) = entity_extract_ids('node', $node);

  $type_info = db_query("SELECT * FROM {islandora_sync_type_settings} WHERE entity_type = 'node' AND bundle = :bundle", array(':bundle' => $bundle))->fetchAll();

  if (isset($type_info[0]->id)) {
    $cmodels = db_query("SELECT cmodel FROM {islandora_sync_type_cmodel} WHERE id = :id", array(':id' => $type_info[0]->id))->fetchCol();

    // Where should namespace come from?
    $object = islandora_prepare_new_object('default', $node->title, array(), $cmodels, array());

    // Properly set creator, etc
    $user = user_load($node->uid);
    $object->owner = $user->name;

    $object = islandora_add_object($object);

    // Update state tracking table

    return $object->id;
  }

}

function islandora_sync_form_alter(&$form, &$form_state, $form_id) {
  //dpm($form_id);
  //$type_url_str = str_replace('_', '-', $type->type);
}

function islandora_sync_page() {
  $types = node_type_get_types();
  $names = node_type_get_names();

  $table = array();
  $table['header'] = array(t('Node Type'), array('data' => t('Operations'), 'colspan' => 2));
  foreach ($names AS $key => $name) {
    $type = $types[$key];
    $type_url_str = str_replace('_', '-', $type->type);

    $table['rows'][]  = array(check_plain($name), l(t('Settings'), 'admin/islandora/node_sync/' . $type_url_str), l(t('Fields'), 'admin/islandora/node_sync/' . $type_url_str . '/fields'));
  }

  return array('#markup' => theme('table', $table));
}

function islandora_sync_nodetype_settings_form($form, &$form_state, $type) {
  $type_name = str_replace('-', '_', $type->type);
  $form = array();

  $record = db_query("SELECT * FROM {islandora_sync_type_settings} WHERE entity_type = 'node' AND bundle = :bundle", array(':bundle' => $type_name))->fetchAll();

  if (isset($record[0]->id)) {
    $sync_fedora = $record[0]->sync_fedora;
    $sync_drupal = $record[0]->sync_drupal;
    $selected_cmodels = db_query("SELECT cmodel FROM {islandora_sync_type_cmodel} WHERE id = :id", array(':id' => $record[0]->id))->fetchCol();
    $form['id'] = array(
      '#type' => 'value',
      '#value' => $record[0]->id,
    );
  }
  else {
    $sync_fedora = FALSE;
    $sync_drupal = FALSE;
    $selected_cmodels = array();
  }

  $form['type'] = array(
    '#type' => 'value',
    '#value' => $type_name,
  );

  $form['sync_fedora'] = array(
    '#type' => 'checkbox',
    '#title' => t('Sync nodes to Fedora'),
    '#default_value' => $sync_fedora,
  );

  $form['sync_drupal'] = array(
    '#type' => 'checkbox',
    '#title' => t('Sync objects to Drupal'),
    '#default_value' => $sync_drupal,
  );

  $content_models = islandora_sync_get_content_models();

  $form['cmodel'] = array(
    '#type' => 'select',
    '#title' => t('Content model'),
    '#description' => t('The content models that this node type should be mapped to.'),
    '#options' => $content_models,
    '#multiple' => TRUE,
    '#states' => array(
      'invisible' => array(
        ':input[name="sync_fedora"]' => array('checked' => FALSE),
        ':input[name="sync_drupal"]' => array('checked' => FALSE),
      ),
    ),
    '#default_value' => $selected_cmodels,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

function islandora_sync_nodetype_settings_form_submit($form, &$form_state) {

  $record['sync_drupal'] = $form_state['values']['sync_drupal'];
  $record['sync_fedora'] = $form_state['values']['sync_fedora'];
  $record['entity_type'] = 'node';
  $record['bundle'] = $form_state['values']['type'];
  if (isset($form_state['values']['id'])) {
    $record['id'] = $form_state['values']['id'];
    drupal_write_record('islandora_sync_type_settings', $record, 'id');
  }
  else {
    drupal_write_record('islandora_sync_type_settings', $record);
    // Get last id, insert cmodels
  }

  foreach ($form_state['values']['cmodel'] AS $cmodel) {

  }

  drupal_set_message(t('Settings updated.'));
}

function islandora_sync_nodetype_fields($type) {
  $type_name = str_replace('-', '_', $type->type);
  $instances = field_info_instances('node', $type_name);
  $instances += field_info_extra_fields('node', $type_name, 'form');

  $table = array();
  $table['header'] = array(t('Label'), t('Name'), t('Mapping'));

  foreach ($instances AS $name => $instance) {
    $table['rows'][] = array(check_plain($instance['label']), check_plain($name), l(t('Map to Fedora'), 'admin/islandora/node_sync/' . $type->type . '/fields/' . $name ));
  }

  return array('#markup' => theme('table', $table));
}

function islandora_sync_field_mapping_form($form, &$form_state, $type, $field) {
  $record = db_query("SELECT * FROM {islandora_sync_field_map} WHERE bundle = :bundle AND field = :field",
    array(':bundle' => $type->type, ':field' => $field)
  )->fetchAll();

  $form = array();

  if (isset($record[0]->id)) {
    $form['id'] = array(
      '#type' => 'value',
      '#value' => $record[0]->id,
    );
    
    $dsid = $record[0]->dsid;
    $xpath = $record[0]->xpath;
  }
  else {
    $dsid = '';
    $xpath = '';
  }
  
  $form['type'] = array(
    '#type' => 'value',
    '#value' => $type->type,
  );

  $form['field'] = array(
    '#type' => 'value',
    '#value' => $field,
  );

  $form['dsid'] = array(
    '#type' => 'textfield',
    '#title' => t('Datastream'),
    '#description' => t('Which datastream should this value be mapped to.'),
    '#default_value' => $dsid,
  );

  $form['xpath'] = array(
    '#type' => 'textfield',
    '#title' => t('XPath'),
    '#description' => t('If the field value is mapped to an XML record, define an XPath expression for the field.'),
    '#default_value' => $xpath,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  
  return $form;
}

function islandora_sync_field_mapping_form_validate($form, &$form_state) {

}

function islandora_sync_field_mapping_form_submit($form, &$form_state) {
  $record['entity_type'] = 'node';
  $record['bundle'] = $form_state['values']['type'];
  $record['field'] = $form_state['values']['field'];
  $record['dsid'] = $form_state['values']['dsid'];
  $record['xpath'] = $form_state['values']['xpath'];
  
  // Record exists, update
  if (isset($form_state['values']['id'])) {
    $record['id'] = $form_state['values']['id'];
    drupal_write_record('islandora_sync_field_map', $record, 'id');
  }
  else {
    drupal_write_record('islandora_sync_field_map', $record);  
  }
  
  drupal_set_message(t('Field mapping saved.'));
}

function islandora_sync_get_content_models() {
  module_load_include('inc', 'islandora', 'includes/tuque');

  $connection = new IslandoraTuque();

  $query = 'select $object  $model from <#ri>
  where (walk($model <fedora-model:hasModel><info:fedora/fedora-system:ContentModel-3.0>
  and $model <fedora-model:hasModel> $object))
  minus $object <mulgara:is><info:fedora/fedora-system:FedoraObject-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ContentModel-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ServiceDefinition-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ServiceDeployment-3.0>
  order by $object';

  $results = $connection->repository->ri->itqlQuery($query);

  $content_models = array();
  foreach ($results as $model) {
    $content_models[] = $model['object']['value'];
  }
  $content_models = array_unique($content_models);
  $content_models = array_values($content_models);

  return $content_models;
}
